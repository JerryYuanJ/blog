import{_ as e,c as t,o as r,ae as o}from"./chunks/framework.CLNW5JS9.js";const p=JSON.parse('{"title":"缓存","description":"","frontmatter":{},"headers":[],"relativePath":"docs/http/cache.md","filePath":"docs/http/cache.md"}'),n={name:"docs/http/cache.md"};function s(h,a,c,i,d,l){return r(),t("div",null,a[0]||(a[0]=[o('<h1 id="缓存" tabindex="-1">缓存 <a class="header-anchor" href="#缓存" aria-label="Permalink to &quot;缓存&quot;">​</a></h1><h2 id="什么是缓存" tabindex="-1">什么是缓存 <a class="header-anchor" href="#什么是缓存" aria-label="Permalink to &quot;什么是缓存&quot;">​</a></h2><p>缓存是一种保存资源的副本在本地并且在下次请求时使用这个副本的一项技术。有了这个副本，当再次请求时，就不会向源服务器去发送请求重新下载该资源，而是直接使用这个副本，<strong>它可以有效的缓解服务器的压力，提升网页获取数据的性能。</strong></p><p>根据使用者的不同，缓存可以分为两大类，一种是<strong>私有缓存</strong>，一种是<strong>共享缓存</strong>。私有缓存一般是我们的浏览器缓存，它只只能作用于单个用户；而共享缓存一般则是代理缓存，它可以被多个用户使用，比如我们常见的CDN服务器就是一种代理缓存服务器。</p><h2 id="强缓存与协商缓存" tabindex="-1">强缓存与协商缓存 <a class="header-anchor" href="#强缓存与协商缓存" aria-label="Permalink to &quot;强缓存与协商缓存&quot;">​</a></h2><p>浏览器缓存可以分为两种类型：强缓存于协商缓存。强缓存也叫本地缓存，当浏览器在请求某一个资源时，发现它的header信息命中强缓存的条件，那么浏览器会直接使用本地的缓存，不会发出任何请求向服务器获取资源；而协商缓存就不同，当满足条件时，浏览器会发送一个请求到服务器上，由服务器来决定浏览器是否使用本地缓存，可以将这个过程当作是浏览器和服务器的一次关于是否可以使用缓存的协商的过程。</p><h3 id="强缓存" tabindex="-1">强缓存 <a class="header-anchor" href="#强缓存" aria-label="Permalink to &quot;强缓存&quot;">​</a></h3><h3 id="协商缓存" tabindex="-1">协商缓存 <a class="header-anchor" href="#协商缓存" aria-label="Permalink to &quot;协商缓存&quot;">​</a></h3>',8)]))}const u=e(n,[["render",s]]);export{p as __pageData,u as default};
