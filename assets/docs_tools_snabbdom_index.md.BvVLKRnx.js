import{_ as i,c as t,o as e,ae as o}from"./chunks/framework.CLNW5JS9.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/tools/snabbdom/index.md","filePath":"docs/tools/snabbdom/index.md"}'),a={name:"docs/tools/snabbdom/index.md"};function n(s,l,d,r,c,p){return e(),t("div",null,l[0]||(l[0]=[o('<p>Snabbdom 是一个 <strong>virtual DOM</strong> 的实现库。它的实现非常简单，核心代码只有大约200行，并且通过模块机制提供了强大的扩展性。它的具体介绍如下：</p><ul><li><p>核心功能</p><ul><li>大约200行代码 -- 您可以轻松地阅读整个内核并完全理解它的工作原理。</li><li>可以通过模块扩展。</li><li>每个vnode和模块都有一组丰富的钩子，可以钩入到 diff 和 patch 过程的任何部分。</li><li>极好的性能。Snabbdom是虚拟DOM基准测试中速度最快的虚拟DOM库之一。</li><li>Patch 函数具有函数签名，等同于 reduce/scan 函数。可以更容易地与FRP库集成。</li></ul></li><li><p>模块功能</p><ul><li>h 函数可以很方便创建虚拟 DOM 节点。</li><li>h 函数也可以操作 SVG。</li><li>操作复杂的 CSS 动画的功能。</li><li>强大的事件监听器功能。</li><li>thunk 函数可以进一步优化 diff 和 patch 过程。</li></ul></li></ul><p>本章我们就由浅入深的学习 snabbdom 的使用，并且从源码的角度作出详细的分析，读者看之前可以先根据 <a href="https://github.com/snabbdom/snabbdom" target="_blank" rel="noreferrer">官方仓库</a> 的文档自己上手一下这个库，了解它的基本使用。</p>',3)]))}const m=i(a,[["render",n]]);export{b as __pageData,m as default};
