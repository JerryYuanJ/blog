import{_ as a,c as t,o as i,ae as l}from"./chunks/framework.CLNW5JS9.js";const b=JSON.parse('{"title":"深拷贝","description":"","frontmatter":{},"headers":[],"relativePath":"docs/basic/js/deep-clone.md","filePath":"docs/basic/js/deep-clone.md"}'),o={name:"docs/basic/js/deep-clone.md"};function r(s,e,n,p,d,c){return i(),t("div",null,e[0]||(e[0]=[l('<h1 id="深拷贝" tabindex="-1">深拷贝 <a class="header-anchor" href="#深拷贝" aria-label="Permalink to &quot;深拷贝&quot;">​</a></h1><p>具体的实现过程可以参考下面两篇文章，这里仅列举出几个需要重视的点：</p><ol><li><p>如何对嵌套对象进行拷贝</p></li><li><p>如何对数组进行拷贝</p></li><li><p>如何解决循环引用的问题</p></li><li><p>对于其他类型，比如Symbol、正则、函数等，如何拷贝</p></li><li><p>如果对象嵌套过多，如何解决递归会出现栈溢出的情况</p></li></ol><h3 id="参考文章" tabindex="-1">参考文章 <a class="header-anchor" href="#参考文章" aria-label="Permalink to &quot;参考文章&quot;">​</a></h3><ul><li><a href="https://juejin.im/post/5d6aa4f96fb9a06b112ad5b1" target="_blank" rel="noreferrer">https://juejin.im/post/5d6aa4f96fb9a06b112ad5b1</a></li><li><a href="https://github.com/yygmind/blog/issues/29" target="_blank" rel="noreferrer">https://github.com/yygmind/blog/issues/29</a></li></ul>',5)]))}const h=a(o,[["render",r]]);export{b as __pageData,h as default};
